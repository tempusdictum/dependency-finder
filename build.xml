<project name="DependencyFinder" default="all" basedir=".">

    <description>
        Dependency Finder, JarJarDiff, and OOMetrics
    </description>

    <patternset id="all.sources">
        <include name="**/*.java"/>
    </patternset>

    <property environment="env"/>

    <property file="tomcat.properties"/>

    <path id="classpath.dependencyfinder">
        <pathelement location="classes"/>
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath.servlet">
        <fileset dir="${tomcat.home}">
            <include name="**/lib/servlet-api.jar"/>
            <include name="**/lib/jsp-api.jar"/>
        </fileset>
    </path>

    <target name="init">
        <tstamp>
            <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss"/>
        </tstamp>

        <property name="release"        value="1.2.1-beta5"/>

        <property name="packageNames"   value="com.jeantessier.*"/>

        <property name="srcDir"         value="src"/>
        <property name="testsDir"       value="tests"/>
        <property name="fitDir"         value="fit"/>
        <property name="binDir"         value="bin"/>
        <property name="classesDir"     value="classes"/>
        <property name="libDir"         value="lib"/>
        <property name="etcDir"         value="etc"/>
        <property name="webDir"         value="web"/>
        <property name="docsDir"        value="docs"/>
        <property name="apiDir"         value="${docsDir}/api"/>
        <property name="logsDir"        value="logs"/>
        <property name="distDir"        value="dist"/>

        <property name="srcFiles"       value="${srcDir}/**"/>
        <property name="testsFiles"     value="${testsDir}/**"/>
        <property name="fitFiles"       value="${fitDir}/**"/>
        <property name="binFiles"       value="${binDir}/**"/>
        <property name="libFiles"       value="${libDir}/**"/>
        <property name="etcFiles"       value="${etcDir}/**"/>
        <property name="webFiles"       value="${webDir}/**"/>
        <property name="docsFiles"      value="${docsDir}/**"/>

        <property name="jarFile"        value="${libDir}/${ant.project.name}.jar"/>
        <property name="warFile"        value="${distDir}/${ant.project.name}-${release}.war"/>
        <property name="srcArchive"     value="${distDir}/${ant.project.name}-${release}.src"/>
        <property name="binArchive"     value="${distDir}/${ant.project.name}-${release}.bin"/>

        <mkdir dir="${classesDir}"/>
        <mkdir dir="${apiDir}"/>
        <mkdir dir="${logsDir}"/>
    </target>

    <target name="all" depends="distclean, dist"
            description="Makes a clean distribution"/>

    <!--
        Compilation
    -->

    <target name="compile" depends="init"
            description="Compiles all classes">
        <javac includeantruntime="true" destdir="${classesDir}" debug="on">
            <src path="${srcDir}"/>
            <classpath>
                <path refid="classpath.dependencyfinder"/>
                <path refid="classpath.servlet"/>
            </classpath>
            <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="deprecation" depends="init">
        <javac includeantruntime="true" destdir="${classesDir}" deprecation="yes">
            <src path="${srcDir}"/>
            <classpath>
                <path refid="classpath.dependencyfinder"/>
                <path refid="classpath.servlet"/>
            </classpath>
            <patternset refid="all.sources"/>
        </javac>
    </target>

    <!--
        Executable environment
    -->

    <target name="exec" depends="jar, generatebin, log4j.config"
            description="Compiles a version that works inplace"/>

    <target name="generatebin" depends="init">
        <exec executable="perl"
              dir="${binDir}">
            <arg value="ScriptGenerator.pl"/>
            <arg value="-g"/>
            <arg value="-v"/>
        </exec>
        <fixcrlf srcdir="${binDir}"
                 excludes="**/*.*"
                 eol="unix"
                 eof="remove"/>
    </target>

    <target name="log4j.config" depends="init">
        <copy file="${srcDir}/log4j.properties" tofile="${classesDir}/log4j.properties"/>
    </target>

    <!--
        Distribution
    -->

    <target name="dist" depends="dist.init, src, docs, bin, war"
            description="Compiles and builds the binary distributions"/>

    <target name="dist.init" depends="init">
        <mkdir dir="${distDir}"/>
    </target>

    <target name="ftp" depends="init"
            description="Uploads the distribution files to SourceForge">
        <ftp server="upload.sourceforge.net"
             userid="anonymous"
             password="jeantessier@hotmail.com"
             remotedir="incoming"
             action="put"
             verbose="yes">
            <fileset dir="${distDir}"/>
        </ftp>
    </target>

    <!--
        Packaging files
    -->

    <target name="src" depends="src.zip, src.tar.gz, src.tar.bz2"/>

    <target name="src.zip" depends="init">
        <zip zipfile="${srcArchive}.zip">
            <zipfileset dir="." prefix="${ant.project.name}-${release}">
                <patternset>
                    <include name="build.xml"/>
                    <include name="license.txt"/>
                    <include name="readme.txt"/>
                    <include name="*.properties"/>
                    <include name="${srcFiles}"/>
                    <include name="${testsFiles}"/>
                    <include name="${binFiles}"/>
                    <include name="${etcFiles}"/>
                    <include name="${webFiles}"/>
                    <include name="${docsFiles}"/>
                    <exclude name="**/CVS"/>
                </patternset>
            </zipfileset>
        </zip>
    </target>

    <target name="src.tar.gz" depends="init">
        <tar destfile="${srcArchive}.tar.gz" compression="gzip">
            <tarfileset dir="." prefix="${ant.project.name}-${release}">
                <patternset>
                    <include name="build.xml"/>
                    <include name="license.txt"/>
                    <include name="readme.txt"/>
                    <include name="*.properties"/>
                    <include name="${srcFiles}"/>
                    <include name="${testsFiles}"/>
                    <include name="${binFiles}"/>
                    <include name="${etcFiles}"/>
                    <include name="${webFiles}"/>
                    <include name="${docsFiles}"/>
                    <exclude name="**/CVS"/>
                </patternset>
            </tarfileset>
        </tar>
    </target>

    <target name="src.tar.bz2" depends="init">
        <tar destfile="${srcArchive}.tar.bz2" compression="bzip2">
            <tarfileset dir="." prefix="${ant.project.name}-${release}">
                <patternset>
                    <include name="build.xml"/>
                    <include name="license.txt"/>
                    <include name="readme.txt"/>
                    <include name="*.properties"/>
                    <include name="${srcFiles}"/>
                    <include name="${testsFiles}"/>
                    <include name="${binFiles}"/>
                    <include name="${etcFiles}"/>
                    <include name="${webFiles}"/>
                    <include name="${docsFiles}"/>
                    <exclude name="**/CVS"/>
                </patternset>
            </tarfileset>
        </tar>
    </target>

    <target name="bin" depends="generatebin, bin.zip, bin.tar.gz, bin.tar.bz2"/>

    <target name="bin.zip" depends="jar">
        <zip zipfile="${binArchive}.zip">
            <zipfileset dir="." prefix="${ant.project.name}-${release}">
                <patternset>
                    <include name="license.txt"/>
                    <include name="readme.txt"/>
                    <include name="${binFiles}/**/*.bat"/>
                    <include name="${libFiles}"/>
                    <include name="${etcFiles}"/>
                    <include name="${docsFiles}"/>
                    <exclude name="**/CVS"/>
                    <exclude name="${docsDir}/**/*.txt"/>
                </patternset>
            </zipfileset>
            <zipfileset dir="${srcDir}" prefix="${ant.project.name}-${release}/${classesDir}">
                <patternset>
                    <include name="**/*.properties"/>
                </patternset>
            </zipfileset>
        </zip>
    </target>

    <target name="bin.tar.gz" depends="jar">
        <tar destfile="${binArchive}.tar.gz" compression="gzip">
            <tarfileset dir="." prefix="${ant.project.name}-${release}">
                <patternset>
                    <include name="license.txt"/>
                    <include name="readme.txt"/>
                    <include name="${libFiles}"/>
                    <include name="${etcFiles}"/>
                    <include name="${docsFiles}"/>
                    <exclude name="**/CVS"/>
                    <exclude name="${docsDir}/**/*.txt"/>
                </patternset>
            </tarfileset>
            <tarfileset dir="." prefix="${ant.project.name}-${release}" mode="755">
                <patternset>
                    <include name="${binFiles}"/>
                    <exclude name="${binDir}/**/*.*"/>
                </patternset>
            </tarfileset>
            <tarfileset dir="${srcDir}" prefix="${ant.project.name}-${release}/${classesDir}">
                <patternset>
                    <include name="**/*.properties"/>
                </patternset>
            </tarfileset>
        </tar>
    </target>

    <target name="bin.tar.bz2" depends="jar">
        <tar destfile="${binArchive}.tar.bz2" compression="bzip2">
            <tarfileset dir="." prefix="${ant.project.name}-${release}">
                <patternset>
                    <include name="license.txt"/>
                    <include name="readme.txt"/>
                    <include name="${libFiles}"/>
                    <include name="${etcFiles}"/>
                    <include name="${docsFiles}"/>
                    <exclude name="**/CVS"/>
                    <exclude name="${docsDir}/**/*.txt"/>
                </patternset>
            </tarfileset>
            <tarfileset dir="." prefix="${ant.project.name}-${release}" mode="755">
                <patternset>
                    <include name="${binFiles}"/>
                    <exclude name="${binDir}/**/*.*"/>
                </patternset>
            </tarfileset>
            <tarfileset dir="${srcDir}" prefix="${ant.project.name}-${release}/${classesDir}">
                <patternset>
                    <include name="**/*.properties"/>
                </patternset>
            </tarfileset>
        </tar>
    </target>

    <target name="jar" depends="compile"
            description="Builds the main application JAR file">
        <jar jarfile="${jarFile}">
            <manifest>
                <attribute name="Specification-Vendor"   value="Jean Tessier"/>
                <attribute name="Specification-Title"    value="Dependency Finder"/>
                <attribute name="Specification-Version"  value="${release}"/>
                <attribute name="Specification-Date"     value="${NOW}"/>
                <attribute name="Implementation-Vendor"  value="Jean Tessier"/>
                <attribute name="Implementation-Title"   value="Dependency Finder"/>
                <attribute name="Implementation-Version" value="${release}"/>
                <attribute name="Implementation-Date"    value="${NOW}"/>
                <attribute name="Implementation-URL"     value="http://depfind.sourceforge.net/"/>
                <attribute name="Copyright-Holder"       value="Jean Tessier"/>
                <attribute name="Copyright-Date"         value="2001-2009"/>
                <attribute name="Compiler-Vendor"        value="${java.vendor}"/>
                <attribute name="Compiler-Title"         value="${java.runtime.name}"/>
                <attribute name="Compiler-Version"       value="${java.version}"/>
                <section name="com/jeantessier/dependencyfinder/Version.class">
                    <attribute name="Java-Bean" value="True"/>
                </section>
            </manifest>
            <zipfileset dir="${classesDir}"
                        prefix=""
                        includes="**/*.class"/>
            <zipfileset dir="${srcDir}"
                        prefix="">
                <include name="dependencyfindertasks.properties"/>
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <exclude name="**/doc-files/**"/>
            </zipfileset>
        </jar>
    </target>

    <target name="war" depends="jar">
        <war destfile="${warFile}"
             webxml="${webDir}/WEB-INF/web.xml">
            <zipfileset dir="${webDir}">
                <exclude name="**/CSV"/>
                <exclude name="**/WEB-INF/*"/>
            </zipfileset>
            <classes dir="${srcDir}"
                     includes="**/*.properties"/>
            <lib dir="${libDir}"
                 includes="**/*.jar"
                 excludes="**/xalan.jar"/>
        </war>
    </target>

    <!--
        Docs
    -->

    <target name="docs" depends="textdocs, javadocs"
            description="Builds the API documentation"/>

    <target name="textdocs" depends="init">
        <echo message="Processing Manual.txt ..."/>
        <exec executable="perl"
              output="${docsDir}/Manual.html">
            <arg value="${binDir}/txt2html.pl"/>
            <arg value="${docsDir}/Manual.txt"/>
            <env key="TXT2HTML_VERSION" value="${release}"/>
        </exec>
        <echo message="Processing Developer.txt ..."/>
        <exec executable="perl"
              output="${docsDir}/Developer.html">
            <arg value="${binDir}/txt2html.pl"/>
            <arg value="${docsDir}/Developer.txt"/>
            <env key="TXT2HTML_VERSION" value="${release}"/>
        </exec>
        <echo message="Processing Tools.txt ..."/>
        <exec executable="perl"
              output="${docsDir}/Tools.html">
            <arg value="${binDir}/txt2html.pl"/>
            <arg value="${docsDir}/Tools.txt"/>
            <env key="TXT2HTML_VERSION" value="${release}"/>
        </exec>
    </target>

    <target name="javadocs" depends="init">
        <javadoc packagenames="${packageNames}"
                 destdir="${apiDir}"
                 author="no"
                 version="no"
                 linksource="yes"
                 doctitle="${ant.project.name}"
                 windowtitle="${ant.project.name}">
            <sourcepath path="${srcDir}"/>
            <classpath>
                <path refid="classpath.dependencyfinder"/>
                <path refid="classpath.servlet"/>
                <pathelement location="${ant.home}/lib/ant.jar"/>
                <pathelement location="${java.home}/../lib/tools.jar"/>
            </classpath>
            <bottom><![CDATA[<i>Dependency Finder ${release} &#169; 2001-2016 Jean Tessier.</i>]]></bottom>
        </javadoc>
    </target>

    <!-- "docletPath" does not work in this version of Ant. -->
    <target name="doclint">
        <javadoc packagenames="${packageNames}"
                 version="no"
                 author="no">
            <sourcepath path="${srcDir}"/>
            <classpath>
                <path refid="classpath.dependencyfinder"/>
                <path refid="classpath.servlet"/>
            </classpath>
            <doclet name="com.jollem.doclint.DocLint"
                    path="C:\language\Java\doclint-1.0a2\doclint.jar"/>
          </javadoc>
    </target>

    <!--
        Cleaning up
    -->

    <target name="clearlogs" depends="init">
        <delete verbose="true">
            <fileset dir=".">
                <patternset>
                    <include name="**/*.log"/>
                </patternset>
            </fileset>
        </delete>
        <delete dir="${logsDir}" verbose="true"/>
    </target>

    <target name="clean" depends="init">
        <delete dir="${classesDir}"
                includeEmptyDirs="true"
                verbose="true"/>
        <delete verbose="true">
            <fileset dir="." defaultexcludes="no">
                <patternset>
                    <include name="**/*~"/>
                    <include name="**/*.bak"/>
                    <include name="**/*.class"/>
                </patternset>
            </fileset>
        </delete>
    </target>

    <target name="cleandocs" depends="init">
        <delete dir="${apiDir}"
                includeEmptyDirs="true"
                verbose="true"/>
        <delete verbose="true">
            <fileset dir="docs">
                <patternset>
                    <include name="**/*.html"/>
                    <exclude name="index.html"/>
                    <exclude name="Menu.html"/>
                    <exclude name="Title.html"/>
                    <exclude name="tasks/**"/>
                </patternset>
            </fileset>
        </delete>
        <delete verbose="true">
            <fileset dir=".">
                <patternset>
                    <include name="**/*.red"/>
                </patternset>
            </fileset>
        </delete>
    </target>

    <target name="cleanbin" depends="init">
        <exec executable="perl"
              dir="${binDir}">
            <arg value="ScriptGenerator.pl"/>
            <arg value="-c"/>
            <arg value="-v"/>
        </exec>
    </target>

    <target name="realclean" depends="clearlogs, cleandocs, cleanbin, clean"
            description="Removes all produced files">
        <delete file="${jarFile}"/>
    </target>

    <target name="distclean" depends="realclean"
            description="Removes all produced files, including distribution files">
        <delete dir="${distDir}"
                includeEmptyDirs="true"
                verbose="true"/>
    </target>

</project>
